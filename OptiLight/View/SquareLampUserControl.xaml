<UserControl x:Class="OptiLight.View.SquareLampUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:local="clr-namespace:OptiLight.View"
             mc:Ignorable="d" 
             Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" Width="{Binding Width}" Height="{Binding Height}"
             d:DesignHeight="50" d:DesignWidth="50">
    <Grid>
        <Rectangle  Opacity = "0.5" Margin="{Binding Radius}" Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="4 4" IsHitTestVisible="False">
            <Rectangle.Fill>
                <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5"
                                     RadiusX="0.5" RadiusY="0.5">
                    <GradientStop Color="{Binding TurnedOnColor}" Offset="{Binding YellowOffset}"/>
                    <GradientStop Color="Transparent" Offset="{Binding TransparentOffset}"/>
                </RadialGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        
        
        <Rectangle Fill="{Binding SelectedColor}" Opacity = "0.7" Margin="-2"/>
            <Rectangle Margin="0,0,0,0">
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                    <GradientStop Color="Beige" Offset="0"/>
                    <GradientStop Color="Gray" Offset="0.3"/>
                    <GradientStop Color="#666666" Offset="0.5"/>
                    <GradientStop Color="Gray" Offset="0.7"/>
                    <GradientStop Color="Beige" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
            <!-- Triggers for handeling the moving of a lamp 
            This only bounds to the outer part of the lamp, need to add triggers to inner circle also -->

        </Rectangle>
        <Rectangle Fill="{Binding SelectedColor}" Opacity="0.2">
            <Rectangle.ToolTip>
                <ToolTip DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                         HasDropShadow="True" ToolTipService.ShowDuration="32000">
                    <StackPanel>
                        <TextBlock FontWeight="Bold" Text="{Binding Name, StringFormat='Type: {0}'}"/>
                        <TextBlock Text="{Binding Width, StringFormat='Width: {0}'}"/>
                        <TextBlock Text="{Binding Height, StringFormat='Height: {0}'}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding X, StringFormat='Coords: ( {0} ,'}"/>
                            <TextBlock Text="{Binding Y, StringFormat=' {0} )'}"/>
                        </StackPanel>
                    </StackPanel>
                </ToolTip>
            </Rectangle.ToolTip>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <cmd:EventToCommand Command="{Binding DataContext.LampPressedCommand, 
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseUp">
                    <cmd:EventToCommand Command="{Binding DataContext.LampReleasedCommand, 
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseMove">
                    <cmd:EventToCommand Command="{Binding DataContext.LampMovedCommand, 
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Rectangle>
    </Grid>
</UserControl>
