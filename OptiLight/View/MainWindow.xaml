<Window x:Class="OptiLight.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:View="clr-namespace:OptiLight.View"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
          xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:ViewModel="clr-namespace:OptiLight.ViewModel"
        Title="Optilight" Height="700" Width="900"
        Icon="pack://application:,,,/Resources/lampicon.ico"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        >
    
    <!-- Key bindings-->
    <Window.InputBindings>
        <KeyBinding Key="Delete"
              Command="{Binding RemoveLampCommand}" />
        <KeyBinding Key="Backspace"
              Command="{Binding RemoveLampCommand}" />
        <KeyBinding Key="Z"
              Modifiers="Control" 
              Command="{Binding UndoCommand}" />
        <KeyBinding Key="Y"
              Modifiers="Control" 
              Command="{Binding RedoCommand}" />
        <KeyBinding Key="X"
              Modifiers="Control" 
              Command="{Binding CutCommand}" />
        <KeyBinding Key="C"
              Modifiers="Control" 
              Command="{Binding CopyCommand}" />
        <KeyBinding Key="V"
              Modifiers="Control" 
              Command="{Binding PasteCommand}" />
    </Window.InputBindings>
    <!-- Overall layout for the Window-->
    <DockPanel>
        <!-- RibbonMenu layout -->
        <Grid DockPanel.Dock="Top" Margin="5">
            <View:RibbonMenu/>
        </Grid>
        <!-- Sidepanel and drawing window layout -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
   
            <!-- SidePanel layout (comes from SidePanel.xaml -->
            <View:SidePanel Grid.Column="0"/>
         


            <!-- Drawing window -->
            <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Center"
                          VerticalScrollBarVisibility="Visible" Grid.Column="1">
                <Grid Height="{Binding canvas.height}" Width="{Binding canvas.width}">

                   
                    <Border BorderBrush="Black" 
                        BorderThickness="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="LightGray"/>

                    <Rectangle Height="{Binding canvas.height}"  Width="{Binding canvas.width}" Stroke="Black" StrokeThickness="0">
                        <Rectangle.Fill>
                            <DrawingBrush Stretch="None" TileMode="Tile"
                            Viewport="{Binding canvas.viewport}" ViewportUnits="Absolute">
                                <!-- ^^^^^^^^^^^ set the size of the tile-->
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <GeometryGroup>
                                                <!-- Draws two lines, to represent grid (X,Y Coordinates)
                                                     Change "50" to the Grid Size Variable, Emil-->
                                                <LineGeometry StartPoint="0,0" EndPoint="{Binding canvas.corner1}" />
                                                <LineGeometry StartPoint="{Binding canvas.corner1}" EndPoint="{Binding canvas.corner2}" />
                                            </GeometryGroup>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Pen>
                                            <!-- set color and thickness of lines -->
                                            <Pen Thickness="0.4" Brush="{Binding canvas.visibility}"/>
                                        </GeometryDrawing.Pen>
                                    </GeometryDrawing>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>

                        <!--Interaction on the canvas for adding lamps or deselecting-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <cmd:EventToCommand Command="{Binding MouseDownCanvasCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                         
                    </Rectangle>
 
                    <ItemsControl ItemsSource="{Binding Lamps}">
    
                    </ItemsControl>
                </Grid>
            </ScrollViewer>
          
        </Grid>
       
    </DockPanel>
</Window>